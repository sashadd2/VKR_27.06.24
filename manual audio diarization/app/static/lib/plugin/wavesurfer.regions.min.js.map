{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/./src/plugin/regions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Region","params","ws","this","wavesurfer","wrapper","drawer","util","style","id","getId","start","Number","end","scrollWidth","getDuration","resize","undefined","Boolean","drag","loop","color","data","attributes","maxLength","minLength","_onRedraw","updateRender","scroll","scrollParent","scrollSpeed","scrollThreshold","bindInOut","render","on","fireEvent","element","removeChild","un","play","once","playLoop","regionEl","document","createElement","attrname","className","title","formatTime","setAttribute","position","zIndex","height","top","handleLeft","appendChild","handleRight","css","cursor","left","width","maxWidth","bindEvents","map","time","Math","floor","slice","join","pixelRatio","dur","getWidth","startLimited","endLimited","max","min","round","regionWidth","backgroundColor","firedIn","firedOut","onProcess","backend","startTime","touchId","maxScroll","scrollDirection","wrapperRect","container","updated","onDown","onUp","onMove","addEventListener","e","preventDefault","stopPropagation","duration","touches","length","targetTouches","identifier","regions","getRegionSnapToGridValue","handleEvent","clientWidth","getBoundingClientRect","target","tagName","toLowerCase","classList","contains","preventClick","oldTime","delta","onDrag","onResize","regionRect","x","right","clientX","edgeScroll","scrollLeft","requestAnimationFrame","body","removeEventListener","maxEnd","update","direction","RegionsPlugin","getOwnPropertyNames","Observer","forEach","_onBackendCreated","region","add","list","_onReady","dragSelection","enableDragSelection","keys","deferInit","staticProps","addRegion","options","initialisedPluginList","initPlugin","clearRegions","clear","disableDragSelection","instance","isReady","remove","slop","pxMove","eventDown","eventUp","eventMove","startUpdate","endUpdate","getCurrentTime","cur","snapToGridInterval","offset","snapToGridOffset"],"mappings":"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","file":"wavesurfer.regions.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"regions\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"regions\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nclass Region {\n    constructor(params, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                  this.start +\n                  (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n\n        this.maxLength = params.maxLength;\n        this.minLength = params.minLength;\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params) {\n        if (null != params.start) {\n            this.start = Number(params.start);\n        }\n        if (null != params.end) {\n            this.end = Number(params.end);\n        }\n        if (null != params.loop) {\n            this.loop = Boolean(params.loop);\n        }\n        if (null != params.color) {\n            this.color = params.color;\n        }\n        if (null != params.data) {\n            this.data = params.data;\n        }\n        if (null != params.resize) {\n            this.resize = Boolean(params.resize);\n        }\n        if (null != params.drag) {\n            this.drag = Boolean(params.drag);\n        }\n        if (null != params.maxLength) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (null != params.minLength) {\n            this.minLength = Number(params.minLength);\n        }\n        if (null != params.attributes) {\n            this.attributes = params.attributes;\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.wrapper.removeChild(this.element);\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n    }\n\n    /* Play the audio region. */\n    play() {\n        this.wavesurfer.play(this.start, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /* Play the region in loop. */\n    playLoop() {\n        this.play();\n        this.once('out', () => this.playLoop());\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        const regionEl = document.createElement('region');\n        regionEl.className = 'wavesurfer-region';\n        regionEl.title = this.formatTime(this.start, this.end);\n        regionEl.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            regionEl.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        const width = this.wrapper.scrollWidth;\n        this.style(regionEl, {\n            position: 'absolute',\n            zIndex: 2,\n            height: '100%',\n            top: '0px'\n        });\n\n        /* Resize handles */\n        if (this.resize) {\n            const handleLeft = regionEl.appendChild(\n                document.createElement('handle')\n            );\n            const handleRight = regionEl.appendChild(\n                document.createElement('handle')\n            );\n            handleLeft.className = 'wavesurfer-handle wavesurfer-handle-start';\n            handleRight.className = 'wavesurfer-handle wavesurfer-handle-end';\n            const css = {\n                cursor: 'col-resize',\n                position: 'absolute',\n                left: '0px',\n                top: '0px',\n                width: '1%',\n                maxWidth: '4px',\n                height: '100%'\n            };\n            this.style(handleLeft, css);\n            this.style(handleRight, css);\n            this.style(handleRight, {\n                left: '100%'\n            });\n        }\n\n        this.element = this.wrapper.appendChild(regionEl);\n        this.updateRender();\n        this.bindEvents(regionEl);\n    }\n\n    formatTime(start, end) {\n        return (start == end ? [start] : [start, end])\n            .map(time =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        var startLimited = this.start;\n        var endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            this.element.title = this.formatTime(this.start, this.end);\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = time => {\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (this.start >= Math.round(time * 100) / 100 ||\n                    this.end <= Math.round(time * 100) / 100)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && this.start <= time && this.end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                this.wavesurfer.play(this.start);\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        this.element.addEventListener('mouseenter', e => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', e => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', e => {\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n        });\n\n        this.element.addEventListener('dblclick', e => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        (this.drag || this.resize) &&\n            (() => {\n                const container = this.wavesurfer.drawer.container;\n                const scrollSpeed = this.scrollSpeed;\n                const scrollThreshold = this.scrollThreshold;\n                let startTime;\n                let touchId;\n                let drag;\n                let maxScroll;\n                let resize;\n                let updated = false;\n                let scrollDirection;\n                let wrapperRect;\n\n                // Scroll when the user is dragging within the threshold\n                const edgeScroll = e => {\n                    const duration = this.wavesurfer.getDuration();\n                    if (!scrollDirection || (!drag && !resize)) {\n                        return;\n                    }\n\n                    // Update scroll position\n                    let scrollLeft =\n                        this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n                    this.wrapper.scrollLeft = scrollLeft = Math.min(\n                        maxScroll,\n                        Math.max(0, scrollLeft)\n                    );\n\n                    // Get the currently selected time according to the mouse position\n                    const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                        this.wavesurfer.drawer.handleEvent(e) * duration\n                    );\n                    const delta = time - startTime;\n                    startTime = time;\n\n                    // Continue dragging or resizing\n                    drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n                    // Repeat\n                    window.requestAnimationFrame(() => {\n                        edgeScroll(e);\n                    });\n                };\n\n                const onDown = e => {\n                    const duration = this.wavesurfer.getDuration();\n                    if (e.touches && e.touches.length > 1) {\n                        return;\n                    }\n                    touchId = e.targetTouches\n                        ? e.targetTouches[0].identifier\n                        : null;\n\n                    // stop the event propagation, if this region is resizable or draggable\n                    // and the event is therefore handled here.\n                    if (this.drag || this.resize) {\n                        e.stopPropagation();\n                    }\n\n                    // Store the selected startTime we begun dragging or resizing\n                    startTime = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                        this.wavesurfer.drawer.handleEvent(e, true) * duration\n                    );\n\n                    // Store for scroll calculations\n                    maxScroll =\n                        this.wrapper.scrollWidth - this.wrapper.clientWidth;\n                    wrapperRect = this.wrapper.getBoundingClientRect();\n\n                    if (e.target.tagName.toLowerCase() == 'handle') {\n                        if (\n                            e.target.classList.contains(\n                                'wavesurfer-handle-start'\n                            )\n                        ) {\n                            resize = 'start';\n                        } else {\n                            resize = 'end';\n                        }\n                    } else {\n                        drag = true;\n                        resize = false;\n                    }\n                };\n                const onUp = e => {\n                    if (e.touches && e.touches.length > 1) {\n                        return;\n                    }\n\n                    if (drag || resize) {\n                        drag = false;\n                        scrollDirection = null;\n                        resize = false;\n                    }\n\n                    if (updated) {\n                        updated = false;\n                        this.util.preventClick();\n                        this.fireEvent('update-end', e);\n                        this.wavesurfer.fireEvent('region-update-end', this, e);\n                    }\n                };\n                const onMove = e => {\n                    const duration = this.wavesurfer.getDuration();\n\n                    if (e.touches && e.touches.length > 1) {\n                        return;\n                    }\n                    if (\n                        e.targetTouches &&\n                        e.targetTouches[0].identifier != touchId\n                    ) {\n                        return;\n                    }\n\n                    if (drag || resize) {\n                        const oldTime = startTime;\n                        const time = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                            this.wavesurfer.drawer.handleEvent(e) * duration\n                        );\n\n                        const delta = time - startTime;\n                        startTime = time;\n\n                        // Drag\n                        if (this.drag && drag) {\n                            updated = updated || !!delta;\n                            this.onDrag(delta);\n                        }\n\n                        // Resize\n                        if (this.resize && resize) {\n                            updated = updated || !!delta;\n                            this.onResize(delta, resize);\n                        }\n\n                        if (\n                            this.scroll &&\n                            container.clientWidth < this.wrapper.scrollWidth\n                        ) {\n                            if (drag) {\n                                // The threshold is not between the mouse and the container edge\n                                // but is between the region and the container edge\n                                const regionRect = this.element.getBoundingClientRect();\n                                let x = regionRect.left - wrapperRect.left;\n\n                                // Check direction\n                                if (time < oldTime && x >= 0) {\n                                    scrollDirection = -1;\n                                } else if (\n                                    time > oldTime &&\n                                    x + regionRect.width <= wrapperRect.right\n                                ) {\n                                    scrollDirection = 1;\n                                }\n\n                                // Check that we are still beyond the threshold\n                                if (\n                                    (scrollDirection === -1 &&\n                                        x > scrollThreshold) ||\n                                    (scrollDirection === 1 &&\n                                        x + regionRect.width <\n                                            wrapperRect.right - scrollThreshold)\n                                ) {\n                                    scrollDirection = null;\n                                }\n                            } else {\n                                // Mouse based threshold\n                                let x = e.clientX - wrapperRect.left;\n\n                                // Check direction\n                                if (x <= scrollThreshold) {\n                                    scrollDirection = -1;\n                                } else if (\n                                    x >=\n                                    wrapperRect.right - scrollThreshold\n                                ) {\n                                    scrollDirection = 1;\n                                } else {\n                                    scrollDirection = null;\n                                }\n                            }\n\n                            scrollDirection && edgeScroll(e);\n                        }\n                    }\n                };\n\n                this.element.addEventListener('mousedown', onDown);\n                this.element.addEventListener('touchstart', onDown);\n\n                this.wrapper.addEventListener('mousemove', onMove);\n                this.wrapper.addEventListener('touchmove', onMove);\n\n                document.body.addEventListener('mouseup', onUp);\n                document.body.addEventListener('touchend', onUp);\n\n                this.on('remove', () => {\n                    document.body.removeEventListener('mouseup', onUp);\n                    document.body.removeEventListener('touchend', onUp);\n                    this.wrapper.removeEventListener('mousemove', onMove);\n                    this.wrapper.removeEventListener('touchmove', onMove);\n                });\n\n                this.wavesurfer.on('destroy', () => {\n                    document.body.removeEventListener('mouseup', onUp);\n                    document.body.removeEventListener('touchend', onUp);\n                });\n            })();\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd || this.start + delta < 0) {\n            return;\n        }\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        });\n    }\n\n    onResize(delta, direction) {\n        if (direction == 'start') {\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            });\n        } else {\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            });\n        }\n    }\n}\n\n/**\n * @typedef {Object} RegionsPluginParams\n * @property {?boolean} dragSelection Enable creating regions by dragging with\n * the mouse\n * @property {?RegionParams[]} regions Regions that should be added upon\n * initialisation\n * @property {number} slop=2 The sensitivity of the mouse dragging\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('regions')`\n */\n\n/**\n * @typedef {Object} RegionParams\n * @desc The parameters used to describe a region.\n * @example wavesurfer.addRegion(regionParams);\n * @property {string} id=→random The id of the region\n * @property {number} start=0 The start position of the region (in seconds).\n * @property {number} end=0 The end position of the region (in seconds).\n * @property {?boolean} loop Whether to loop the region when played back.\n * @property {boolean} drag=true Allow/disallow dragging the region.\n * @property {boolean} resize=true Allow/disallow resizing the region.\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\n */\n\n/**\n * Regions are visual overlays on waveform that can be used to play and loop\n * portions of audio. Regions can be dragged and resized.\n *\n * Visual customization is possible via CSS (using the selectors\n * `.wavesurfer-region` and `.wavesurfer-handle`).\n *\n * @implements {PluginClass}\n * @extends {Observer}\n *\n * @example\n * // es6\n * import RegionsPlugin from 'wavesurfer.regions.js';\n *\n * // commonjs\n * var RegionsPlugin = require('wavesurfer.regions.js');\n *\n * // if you are using <script> tags\n * var RegionsPlugin = window.WaveSurfer.regions;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     RegionsPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class RegionsPlugin {\n    /**\n     * Regions plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'regions',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addRegion(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    return this.regions.add(options);\n                },\n\n                clearRegions() {\n                    this.regions && this.regions.clear();\n                },\n\n                enableDragSelection(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    this.regions.enableDragSelection(options);\n                },\n\n                disableDragSelection() {\n                    this.regions.disableDragSelection();\n                }\n            },\n            instance: RegionsPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n        this.util.getRegionSnapToGridValue = value => {\n            return this.getRegionSnapToGridValue(value, params);\n        };\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            this.util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Region.prototype[key] = this.util.Observer.prototype[key];\n        });\n        this.wavesurfer.Region = Region;\n\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.regions) {\n                this.params.regions.forEach(region => {\n                    this.add(region);\n                });\n            }\n        };\n\n        // Id-based hash of regions\n        this.list = {};\n        this._onReady = () => {\n            if (this.params.dragSelection) {\n                this.enableDragSelection(this.params);\n            }\n            Object.keys(this.list).forEach(id => {\n                this.list[id].updateRender();\n            });\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        this.disableDragSelection();\n        this.clear();\n    }\n\n    /**\n     * Add a region\n     *\n     * @param {object} params Region parameters\n     * @return {Region} The created region\n     */\n    add(params) {\n        const region = new this.wavesurfer.Region(params, this.wavesurfer);\n\n        this.list[region.id] = region;\n\n        region.on('remove', () => {\n            delete this.list[region.id];\n        });\n\n        return region;\n    }\n\n    /**\n     * Remove all regions\n     */\n    clear() {\n        Object.keys(this.list).forEach(id => {\n            this.list[id].remove();\n        });\n    }\n\n    enableDragSelection(params) {\n        const slop = params.slop || 2;\n        const container = this.wavesurfer.drawer.container;\n        const scroll =\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\n        const scrollSpeed = params.scrollSpeed || 1;\n        const scrollThreshold = params.scrollThreshold || 10;\n        let drag;\n        let duration = this.wavesurfer.getDuration();\n        let maxScroll;\n        let start;\n        let region;\n        let touchId;\n        let pxMove = 0;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            if (!region || !scrollDirection) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Update range\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            region.update({\n                start: Math.min(end * duration, start * duration),\n                end: Math.max(end * duration, start * duration)\n            });\n\n            // Check that there is more to scroll and repeat\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\n                window.requestAnimationFrame(() => {\n                    edgeScroll(e);\n                });\n            }\n        };\n\n        const eventDown = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            duration = this.wavesurfer.getDuration();\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            wrapperRect = this.wrapper.getBoundingClientRect();\n\n            drag = true;\n            start = this.wavesurfer.drawer.handleEvent(e, true);\n            region = null;\n            scrollDirection = null;\n        };\n        this.wrapper.addEventListener('mousedown', eventDown);\n        this.wrapper.addEventListener('touchstart', eventDown);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchstart', eventDown);\n            this.wrapper.removeEventListener('mousedown', eventDown);\n        });\n\n        const eventUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            drag = false;\n            pxMove = 0;\n            scrollDirection = null;\n\n            if (region) {\n                this.util.preventClick();\n                region.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', region, e);\n            }\n\n            region = null;\n        };\n        this.wrapper.addEventListener('mouseup', eventUp);\n        this.wrapper.addEventListener('touchend', eventUp);\n\n        document.body.addEventListener('mouseup', eventUp);\n        document.body.addEventListener('touchend', eventUp);\n        this.on('disable-drag-selection', () => {\n            document.body.removeEventListener('mouseup', eventUp);\n            document.body.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('mouseup', eventUp);\n        });\n\n        const eventMove = e => {\n            if (!drag) {\n                return;\n            }\n            if (++pxMove <= slop) {\n                return;\n            }\n\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\n                return;\n            }\n\n            if (!region) {\n                region = this.add(params || {});\n            }\n\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                start * duration\n            );\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                end * duration\n            );\n            region.update({\n                start: Math.min(endUpdate, startUpdate),\n                end: Math.max(endUpdate, startUpdate)\n            });\n\n            // If scrolling is enabled\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\n                // Check threshold based on mouse\n                const x = e.clientX - wrapperRect.left;\n                if (x <= scrollThreshold) {\n                    scrollDirection = -1;\n                } else if (x >= wrapperRect.right - scrollThreshold) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n                scrollDirection && edgeScroll(e);\n            }\n        };\n        this.wrapper.addEventListener('mousemove', eventMove);\n        this.wrapper.addEventListener('touchmove', eventMove);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchmove', eventMove);\n            this.wrapper.removeEventListener('mousemove', eventMove);\n        });\n    }\n\n    disableDragSelection() {\n        this.fireEvent('disable-drag-selection');\n    }\n\n    /**\n     * Get current region\n     *\n     * The smallest region that contains the current time. If several such\n     * regions exist, take the first. Return `null` if none exist.\n     *\n     * @returns {Region} The current region\n     */\n    getCurrentRegion() {\n        const time = this.wavesurfer.getCurrentTime();\n        let min = null;\n        Object.keys(this.list).forEach(id => {\n            const cur = this.list[id];\n            if (cur.start <= time && cur.end >= time) {\n                if (!min || cur.end - cur.start < min.end - min.start) {\n                    min = cur;\n                }\n            }\n        });\n\n        return min;\n    }\n\n    /**\n     * Match the value to the grid, if required\n     *\n     * If the regions plugin params have a snapToGridInterval set, return the\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\n     * the passed value will be returned without modification.\n     *\n     * @param {number} value the value to snap to the grid, if needed\n     * @param {Object} params the regions plugin params\n     * @returns {number} value\n     */\n    getRegionSnapToGridValue(value, params) {\n        if (params.snapToGridInterval) {\n            // the regions should snap to a grid\n            const offset = params.snapToGridOffset || 0;\n            return (\n                Math.round((value - offset) / params.snapToGridInterval) *\n                    params.snapToGridInterval +\n                offset\n            );\n        }\n\n        // no snap-to-grid\n        return value;\n    }\n}\n"],"sourceRoot":""}